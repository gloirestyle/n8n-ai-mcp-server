import { MCPServer } from '@modelcontextprotocol/core';\nimport { N8nApi } from './n8nApi';\n\nclass N8nMCPServer extends MCPServer {\n  private n8nApi: N8nApi;\n\n  constructor() {\n    super();\n    this.n8nApi = new N8nApi({\n      baseUrl: process.env.N8N_URL || 'http://localhost:5678',\n      apiKey: process.env.N8N_API_KEY\n    });\n\n    // Registrar comandos MCP\n    this.registerCommand('createWorkflow', this.createWorkflow.bind(this));\n    this.registerCommand('executeWorkflow', this.executeWorkflow.bind(this));\n    this.registerCommand('updateWorkflow', this.updateWorkflow.bind(this));\n    this.registerCommand('deleteWorkflow', this.deleteWorkflow.bind(this));\n    this.registerCommand('listWorkflows', this.listWorkflows.bind(this));\n  }\n\n  async createWorkflow({ name, nodes }) {\n    return await this.n8nApi.createWorkflow(name, nodes);\n  }\n\n  async executeWorkflow({ workflowId }) {\n    return await this.n8nApi.executeWorkflow(workflowId);\n  }\n\n  async updateWorkflow({ workflowId, nodes }) {\n    return await this.n8nApi.updateWorkflow(workflowId, nodes);\n  }\n\n  async deleteWorkflow({ workflowId }) {\n    return await this.n8nApi.deleteWorkflow(workflowId);\n  }\n\n  async listWorkflows() {\n    return await this.n8nApi.listWorkflows();\n  }\n}\n\nconst server = new N8nMCPServer();\nserver.start();